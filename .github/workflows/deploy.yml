name: Deploy AirCall Dashboard

on:
  push:
    branches: [ main ]  # Adjust this to match your main branch name
  workflow_dispatch:    # Allows manual trigger ing from GitHub UI

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production  # The environment where your secrets are stored
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      
      # If you're using a build tool like webpack, you'd add build steps here
      # For example:
      # - name: Install dependencies
      #   run: npm install
      # - name: Build project
      #   run: npm run build
      
      - name: Generate Firebase Config
        run: |
          echo "// This file is auto-generated - DO NOT EDIT" > config.js
          echo "const firebaseConfig = {" >> config.js
          echo "  apiKey: \"${{ secrets.FIREBASE_API_KEY }}\"," >> config.js
          echo "  authDomain: \"${{ secrets.FIREBASE_AUTH_DOMAIN }}\"," >> config.js
          echo "  databaseURL: \"${{ secrets.FIREBASE_DATABASE_URL }}\"," >> config.js
          echo "  projectId: \"${{ secrets.FIREBASE_PROJECT_ID }}\"," >> config.js
          echo "  storageBucket: \"${{ secrets.FIREBASE_STORAGE_BUCKET }}\"," >> config.js
          echo "  messagingSenderId: \"${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}\"," >> config.js
          echo "  appId: \"${{ secrets.FIREBASE_APP_ID }}\"," >> config.js
          echo "  measurementId: \"${{ secrets.FIREBASE_MEASUREMENT_ID }}\"" >> config.js
          echo "};" >> config.js
      
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          channelId: live
          projectId: ${{ secrets.FIREBASE_PROJECT_ID }}